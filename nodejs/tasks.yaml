---
- name: Install nodejs and npm on archlinux
  community.general.pacman:
    name: "{{ item }}"
  loop:
    - nodejs
    - npm
  when: ansible_distribution == "Archlinux"
  become: true

- name: Install latest Node.js
  vars:
    njs_version: "{{
      (
        lookup('url', 'https://nodejs.org/dist/index.json', split_lines=false)
          | from_json
      )[0].get('version')
    }}"
    njs_base: "{{
      (chess_dir | default('') == '')
        | ternary(home+'/Programs/Node.js', chess_dir+'/Node.js')
    }}"
  block:
    - name: Create njs_base
      ansible.builtin.file:
        dest: "{{ njs_base }}"
        state: directory

    - name: Get installed nodejs version
      ansible.builtin.command: "{{ njs_base }}/node/bin/node --version"
      ignore_errors: true
      register: njs_installed
      changed_when: false

    - name: Install go
      block:
        - name: Download and unpack nodejs
          ansible.builtin.unarchive:
            src: "https://nodejs.org/dist/{{ njs_version }}/node-{{ njs_version}}-linux-x64.tar.xz"
            dest: "{{ njs_base }}"
            remote_src: true

        - name: Move node symlink
          ansible.builtin.file:
            path: "{{ njs_base }}/node"
            src: "node-{{ njs_version }}-linux-x64"
            state: link

        - name: Remove current nodejs
          ansible.builtin.file:
            path: "{{ njs_base }}/node-{{ njs_installed.stdout }}-linux-x64"
            state: absent
          when: njs_installed is succeeded
      when:
        - njs_installed is failed or
          njs_version is not in njs_installed.stdout

    - name: Check create nodejs links
      ansible.builtin.file:
        path: "{{ dot_local }}/bin/{{ item }}"
        src: "{{ njs_base }}/node/bin/{{ item }}"
        state: link
      loop:
        - node
        - npm
        - npx
  when: distro != "el7"
  tags:
    - classe


- name: Install npm config file
  ansible.builtin.template:
    dest: "{{ home }}/.npmrc"
    src: npmrc.j2

- name: Install global npm packages
  community.general.npm:
    global: true
    name: "{{ item }}"
  loop:
    - prettier

- name: Find and add content of node.js files in other modules
  shell: "find {{ playbook_dir }} -name 'node.js' -exec cat {} ';'"
  register: njs_pkgs
  changed_when: false

- name: Install module nodejs packages
  community.general.npm:
    global: true
    name: "{{ item }}"
  loop: "{{ njs_pkgs.stdout_lines }}"

- name: Upgrade all global npm packages
  community.general.npm:
    global: true
    state: latest
